"""update room attribute of rates and add inclusion

Revision ID: c4cbaffceb7b
Revises: 4a5760074a62
Create Date: 2024-05-27 06:59:02.975544

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.dialects import sqlite
from sqlalchemy import Text

# revision identifiers, used by Alembic.
revision = 'c4cbaffceb7b'
down_revision = '4a5760074a62'
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    
    # Drop the temporary table if it exists
    if 'temporary_table' in inspector.get_table_names() and '_alembic_tmp_room' in inspector.get_table_names():
        op.drop_table('_alembic_tmp_room')

    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.drop_column('rates')  # Drop the 'rates' column

        # Add the 'inclusion' column
        batch_op.add_column(sa.Column('inclusion', sa.String(length=100), nullable=True))
        
        # Check if the database is SQLite
        if conn.dialect.name == 'sqlite':
            # Add TEXT columns for rates
            batch_op.add_column(sa.Column('january_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('february_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('march_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('april_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('may_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('june_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('july_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('august_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('september_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('october_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('november_rates', sa.Text(), nullable=True))
            batch_op.add_column(sa.Column('december_rates', sa.Text(), nullable=True))
        else:
            # Add JSONB columns for rates
            batch_op.add_column(sa.Column('january_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('february_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('march_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('april_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('may_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('june_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('july_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('august_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('september_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('october_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('november_rates', postgresql.JSONB(astext_type=Text()), nullable=True))
            batch_op.add_column(sa.Column('december_rates', postgresql.JSONB(astext_type=Text()), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('room', schema=None) as batch_op:
        batch_op.add_column(sa.Column('weekend_rates_addition', sqlite.JSON(), nullable=True))
        batch_op.add_column(sa.Column('rates', sqlite.JSON(), nullable=False))
        batch_op.alter_column('rooms_available',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('availability',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.drop_column('december_rates')
        batch_op.drop_column('november_rates')
        batch_op.drop_column('october_rates')
        batch_op.drop_column('september_rates')
        batch_op.drop_column('august_rates')
        batch_op.drop_column('july_rates')
        batch_op.drop_column('june_rates')
        batch_op.drop_column('may_rates')
        batch_op.drop_column('april_rates')
        batch_op.drop_column('march_rates')
        batch_op.drop_column('february_rates')
        batch_op.drop_column('january_rates')
        batch_op.drop_column('inclusion')

    # Create the temporary table if it doesn't exist
    conn = op.get_bind()
    inspector = sa.inspect(conn)
    if 'temporary_table' in inspector.get_table_names() and '_alembic_tmp_room' not in inspector.get_table_names():
        op.create_table('_alembic_tmp_room',
            sa.Column('id', sa.INTEGER(), nullable=False),
            sa.Column('hotel_id', sa.INTEGER(), nullable=False),
            sa.Column('type', sa.VARCHAR(length=100), nullable=False),
            sa.Column('availability', sa.BOOLEAN(), nullable=True),
            sa.Column('rates', sqlite.JSON(), nullable=False),
            sa.Column('rooms_available', sa.INTEGER(), nullable=True),
            sa.Column('weekend_rates_addition', sqlite.JSON(), nullable=False),
            sa.ForeignKeyConstraint(['hotel_id'], ['hotel.id'], ),
            sa.PrimaryKeyConstraint('id')
        )
    # ### end Alembic commands ###
