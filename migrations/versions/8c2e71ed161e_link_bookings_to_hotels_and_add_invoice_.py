"""Link Bookings to Hotels and add Invoice Model

Revision ID: 8c2e71ed161e
Revises: a67198414641
Create Date: 2024-09-09 17:36:30.833253

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8c2e71ed161e'
down_revision = 'a67198414641'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'invoices',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('booking_id', sa.Integer(), nullable=False),
        sa.Column('time', sa.DateTime(), nullable=False),
        sa.Column('payment_method', sa.String(length=50), nullable=False),
        sa.Column('remarks', sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(['booking_id'], ['bookings.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # Step 1: Add `hotel_id` as nullable
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('hotel_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('fk_booking_hotel_id', 'hotel', ['hotel_id'], ['id'])

    # Step 2: Populate `hotel_id` with appropriate default value
    # You need to decide how to populate these values; setting all to a default hotel_id (e.g., 1) or appropriate IDs
    op.execute(
        "UPDATE bookings SET hotel_id = (SELECT id FROM hotel LIMIT 1)"
    )  # Modify this as per your needs

    # Step 3: Alter `hotel_id` to be non-nullable
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.alter_column('hotel_id', existing_type=sa.Integer(), nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('bookings', schema=None) as batch_op:
        batch_op.drop_constraint('fk_booking_hotel_id', type_='foreignkey')
        batch_op.drop_column('hotel_id')

    op.drop_table('invoices')
    # ### end Alembic commands ###
